<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean id ="account" class="com.common.PersonalAccount">
        <constructor-arg index="0" value="20"/> <!--20번 은행 코드번호-->
        <constructor-arg index="1" value="110-234-12341234"/>   <!--계좌번호-->
    </bean>

    <!--목차 1. account bean을 가지는 맴버 생성자 주입
            new Member(x,x,x,new PersonalAccount) 를 할 필요 없어짐-->
<!--    <bean id="member" class="com.common.MemberDTO">-->
<!--        <constructor-arg name="sequence" value="1"/>-->
<!--        <constructor-arg name="name" value="홍길동"/>-->
<!--        <constructor-arg name="phone" value="010-1234-1234"/>-->
<!--        <constructor-arg name="email" value="hong123@gmail.com"/>-->
<!--        <constructor-arg name="personalAccount">    &lt;!&ndash;account bean 참조&ndash;&gt;-->
<!--                <ref bean = "account"/>-->
<!--        </constructor-arg>-->
<!--    </bean>-->
    <!--목차 2. setter 주입 - MemberDTO에 있는 @setter를 통해 활용한 방법!
            * 기본생성자를 만들어 setter로 값을 넣는 방식
            * 이 방식은 좋지 않다...-->
    <bean id = "member" class="com.common.MemberDTO">
        <property name="sequence" value="1"/>
        <property name="name" value="홍길동"/>
        <property name="phone" value="010-1234-1234"/>
        <property name="email" value="hong123@gmail.com"/>
        <property name="personalAccount" ref="account"/>
    </bean>

</beans>